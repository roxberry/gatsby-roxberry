{"version":3,"file":"component---src-templates-posts-js-73cba0ad350f16d01c0a.js","mappings":"mNA+CA,EA5Cc,SAAC,GAAkE,IAAjEA,EAAgE,EAAhEA,QAASC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,SAE9D,OACI,sBAAIC,UAAU,aACVC,MAAO,CACPC,QAAS,OACTC,SAAU,OACVC,WAAY,SACZC,UAAW,OACXC,mBAAoB,KAEpBZ,GACA,gBAAC,KAAD,CAAMa,GAAIX,EAAUY,IAAI,OAAOP,MAAO,CAACQ,YAAa,KAApD,mBAIDC,MAAMC,KAAK,CAAEC,OAAQb,IAAY,SAACc,EAAGC,GAAJ,OAChC,sBACEC,IAAG,qBAAsBD,EAAI,GAC7Bb,MAAO,CACLe,OAAQ,KAGV,gBAAC,KAAD,CACET,GAAE,KAAY,IAANO,EAAU,GAAKA,EAAI,GAC3Bb,MAAO,CACLgB,eAAgB,OAChBC,MAAOJ,EAAI,IAAMhB,EAAc,UAAY,GAC3CqB,WAAYL,EAAI,IAAMhB,EAAc,UAAY,KAGjDgB,EAAI,QAITnB,GACA,gBAAC,KAAD,CAAMY,GAAIV,EAAUW,IAAI,OAAOP,MAAO,CAACmB,WAAY,KAAnD,iB,UCoCZ,EApEMC,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAiEH,OAjEGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MAEzC,GADcN,EAAKO,kBAAkBC,MACHP,KAAKC,MAAMO,aAArClC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACfL,EAA0B,IAAhBI,EACVH,EAASG,IAAgBC,EACzBH,EAAWE,EAAc,GAAM,EAAI,IAAM,KAAOA,EAAc,GAAGmC,WACjEpC,EAAW,KAAOC,EAAc,GAAGmC,WAEzC,OACE,gBAAC,IAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAOH,GAC5C,gBAAC,IAAD,CAAKG,MAAM,aACX,+BACE,sCACA,iMAMF,+BACE,mCACA,uBAAK7B,UAAU,WACZuB,EAAKO,kBAAkBC,MAAMI,KAAI,SAACC,EAAMtB,GACvC,IAAMuB,EAAYD,EAAKE,KAAKC,YAAYC,UAExC,OACE,uBACEzB,IAAKqB,EAAKE,KAAKG,OAAOC,KAAO5B,EAAEmB,WAC/BjC,UAAU,QAEV,gBAAC,KAAD,CAAMO,GAAI6B,EAAKE,KAAKG,OAAOC,MACxBL,GAAaA,EAAUM,KACtB,gBAAC,EAAAC,EAAD,CACEC,MAAOR,EAAUM,IAAIG,gBAAgBC,gBACrCC,IAAKX,EAAUW,IACfC,OAAO,cAGX,0BAAKb,EAAKE,KAAKC,YAAYV,OAC3B,uBAAK7B,UAAU,cAAf,aACaoC,EAAKE,KAAKC,YAAYW,MAEnC,uBAAKlD,UAAU,eACb,yBAAIoC,EAAKE,KAAKC,YAAYY,eAOpC,gBAAC,EAAD,CACFzD,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,SAAUA,QAMjB,EAjEGsB,CAAkB+B,EAAAA","sources":["webpack://roxberry.dev/./src/components/pager.js","webpack://roxberry.dev/./src/templates/posts.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Pager = ({isFirst, isLast, prevPage, nextPage, currentPage, numPages}) => {\n\n    return (\n        <ul className='post-pager'\n            style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            alignItems: 'center',\n            listStyle: 'none',\n            paddingInlineStart: 0,\n          }}>\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\" style={{marginRight: 20}}>\n              ← Previous Page\n            </Link>\n          )}\n          {Array.from({ length: numPages }, (_, i) => (\n            <li\n              key={`pagination-number${i + 1}`}\n              style={{\n                margin: 20,\n              }}\n            >\n              <Link\n                to={`/${i === 0 ? \"\" : i + 1}`}\n                style={{\n                  textDecoration: \"none\",\n                  color: i + 1 === currentPage ? \"#ffffff\" : \"\",\n                  background: i + 1 === currentPage ? \"#007acc\" : \"\",\n                }}\n              >\n                {i + 1}\n              </Link>\n            </li>\n          ))}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\" style={{marginLeft: 20}}>\n              Next Page →\n            </Link>\n          )}\n        </ul>\n    )\n}\n\nexport default Pager","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Pager from \"../components/pager\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Link, graphql } from \"gatsby\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/\" : \"/\" + (currentPage - 1).toString()\n    const nextPage = \"/\" + (currentPage + 1).toString()\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Welcome!\" />\n        <section>\n          <h1>Welcome!</h1>\n          <p>\n            I am a technologist and someone who seeks out new ideas and\n            paradigms. On my blog, you will find my day to day notes, ideas,\n            projects and stuff that may be useful.\n          </p>\n        </section>\n        <section>\n          <h1>Posts</h1>\n          <div className=\"flexbox\">\n            {data.allMarkdownRemark.edges.map((edge, i) => {\n              const postImage = edge.node.frontmatter.postimage\n\n              return (\n                <div\n                  key={edge.node.fields.slug + i.toString()}\n                  className=\"post\"\n                >\n                  <Link to={edge.node.fields.slug}>\n                    {postImage && postImage.src && (\n                      <GatsbyImage\n                        image={postImage.src.childImageSharp.gatsbyImageData}\n                        alt={postImage.alt}\n                        layout=\"fullWidth\"\n                      />\n                    )}\n                    <h3>{edge.node.frontmatter.title}</h3>\n                    <div className=\"postedInfo\">\n                      posted on {edge.node.frontmatter.date}\n                    </div>\n                    <div className=\"postExcerpt\">\n                      <p>{edge.node.frontmatter.excerpt}</p>\n                    </div>\n                  </Link>\n                </div>\n              )\n            })}\n            \n            <Pager \n          isFirst={isFirst} \n          isLast={isLast} \n          prevPage={prevPage} \n          nextPage={nextPage} \n          currentPage={currentPage} \n          numPages={numPages} />\n          \n          </div>\n        </section>   \n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { featured: { eq: true } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            subtitle\n            date(formatString: \"LL\")\n            author\n            excerpt\n            featured\n            postimage {\n              alt\n              src {\n                absolutePath\n                childImageSharp {\n                  gatsbyImageData(\n                    layout: FULL_WIDTH\n                    placeholder: BLURRED\n                    formats: [AUTO, WEBP, AVIF]\n                  )\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["isFirst","isLast","prevPage","nextPage","currentPage","numPages","className","style","display","flexWrap","alignItems","listStyle","paddingInlineStart","to","rel","marginRight","Array","from","length","_","i","key","margin","textDecoration","color","background","marginLeft","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","pageContext","toString","location","map","edge","postImage","node","frontmatter","postimage","fields","slug","src","G","image","childImageSharp","gatsbyImageData","alt","layout","date","excerpt","React"],"sourceRoot":""}